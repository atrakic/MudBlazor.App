services:
  app:
    build:
      context: .
    restart: always
    container_name: app
    environment:
      ## Uses Sqlite:
      # - ASPNETCORE_ENVIRONMENT=Development
      ## Uses MsSql server:
      - ASPNETCORE_ENVIRONMENT=Production
      # Override default port:
      - ASPNETCORE_HTTP_PORTS=8000
      # Integration with nginx-proxy/acme-companion:
      - VIRTUAL_HOST=${HOST_DOMAIN:-}
      - LETSENCRYPT_HOST=${HOST_DOMAIN:-}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-}
    volumes:
      - ./docker/healthchecks:/healthchecks
    healthcheck:
      test: /healthchecks/curl.sh
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    ports:
      - 8000:8000
    depends_on:
      app-migrations:
        condition: service_completed_successfully

  # Run migrations:
  app-migrations:
    build: ./docker/migrations
    container_name: migrations
    tty: true
    restart: "no"
    environment:
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      ## Uses MsSql server:
      - ASPNETCORE_ENVIRONMENT=Production
    working_dir: /app
    volumes:
      - $PWD/src:/app:rw
      - app-mydb:/app/App_Data
      # Example of mounting appsettings.json and run migrations:
      #- $PWD/src/appsettings.json:/app/appsettings.json:ro
      #- $PWD/src/migrations:/app/migrations:rw
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -exo pipefail
        dotnet ef database update --context ApplicationDbContext --verbose
        dotnet ef migrations list --no-build --context ApplicationDbContext --verbose
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: db
    hostname: db
    environment:
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - ACCEPT_EULA=Y
      - MSSQL_AGENT_ENABLED=true
    #ports:
    #  - 1433:1433
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${MSSQL_SA_PASSWORD}" -Q "SELECT getdate()" -b
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

volumes:
    app-mydb:
