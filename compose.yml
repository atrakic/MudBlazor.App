services:
  app:
    build:
      context: .
    image: ${IMAGE_REPO:-ghcr.io}/atrakic/mudblazor.app:${RELEASE_VERSION:-latest}
    container_name: app
    restart: always
    develop:
      watch:
        - action: sync
          path: src
          target: /app
        - action: rebuild
          path: src
          target: /app
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTP_PORTS: "8080"
      MSSQL_SA_PASSWORD: Strong=Passw0rd
      ConnectionStrings__Default: Server=db;Initial Catalog=MudBlazorApp;UID=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=true;Connection Timeout=3;
    healthcheck:
      test:
        - CMD-SHELL
        - curl -sf -X 'GET' http://localhost:8080/healthz || exit 1
      timeout: 3s
      interval: 5s
      retries: 5
      start_period: 3s
    ports:
      - "${ASPNETCORE_HTTP_PORTS:-8080}:8080"
    depends_on:
      migrations:
        #condition: service_completed_successfully
        condition: service_started
        required: true

  migrations:
    build:
      context: ./docker/migrations
    image: ${IMAGE_REPO:-ghcr.io}/atrakic/mudblazor.migrations:${RELEASE_VERSION:-latest}
    tty: true
    container_name: migrations
    working_dir: /app
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__Default: Server=db;Initial Catalog=MudBlazorApp;UID=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=true;Connection Timeout=3;
      MSSQL_SA_PASSWORD: Strong=Passw0rd
    volumes:
      - $PWD/src:/app:rw
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -exo pipefail
        # dotnet ef dbcontext info --context ApplicationDbContext --verbose
        # dotnet ef database update --context ApplicationDbContext --verbose
        dotnet ef migrations list --no-build --context ApplicationDbContext --verbose
        tail -f /dev/null
    depends_on:
      db:
        condition: service_healthy
        required: true

  # https://hub.docker.com/r/microsoft/mssql-server
  db:
    image: mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-22.04
    container_name: db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: Strong=Passw0rd
    ports:
      - "1433:1433"
    hostname: db
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Strong=Passw0rd" -Q "SELECT getdate()" -b
      timeout: 3s
      interval: 10s
      retries: 10
      start_period: 10s
