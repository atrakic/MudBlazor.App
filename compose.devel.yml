# Docker compose file for running the app and migrations for development environment.
# Db migrations are run in a separate container.

services:
  app:
    build:
      context: .
    restart: unless-stopped
    container_name: app
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_HTTPS_PORT=https://+:${ASPNETCORE_HTTPS_PORT:-8443}
      - ASPNETCORE_URLS=http://+:${ASPNETCORE_HTTP_PORTS:-8000}
      - ConnectionStrings__Default='Data Source=:memory:'
    develop:
      watch:
        - action: sync
          path: src
          target: /app
        - action: rebuild
          path: src
          target: /app
    volumes:
      - ./docker/healthchecks:/healthchecks
    #healthcheck:
    #  test: /healthchecks/curl.sh
    #  interval: 5s
    #  timeout: 3s
    #  retries: 5
    #  start_period: 5s
    expose:
      - "${ASPNETCORE_HTTP_PORT:-8000}"
      - "${ASPNETCORE_HTTPS_PORT:-8443}"
    depends_on:
      migrations:
        condition: service_completed_successfully

  migrations:
    build: ./docker/migrations
    container_name: migrations
    tty: true
    restart: no
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__Default='Data Source=:memory:'
    volumes:
      - $PWD/src:/app:rw
      ## Optional: example of mounting appsettings.json
      #- $PWD/src/appsettings.json:/app/appsettings.json:ro
      #- $PWD/src/Migrations:/app/Migrations:rw
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -exo pipefail
        dotnet ef database update --context ApplicationDbContext --verbose
        dotnet ef migrations list --no-build --context ApplicationDbContext --verbose
