name: monitoring

services:
  # UI to query traces and metrics
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    restart: unless-stopped
    container_name: grafana
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - VIRTUAL_HOST=${GRAFANA_VIRTUAL_HOST:-}
      - LETSENCRYPT_HOST=${GRAFANA_LETSENCRYPT_HOST:-}
    healthcheck:
      test:
        - "CMD"
        - "wget"
        - "--quiet"
        - "http://localhost:3000/api/health"
        - "--output-document"
        - "-"
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # OTEL Collector to receive logs, metrics and traces from the application
  otel-collector:
    image: otel/opentelemetry-collector:0.70.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    container_name: otel-collector
    restart: unless-stopped
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
      - "9201:9201"

  # Exports Traces to Tempo
  tempo:
    image: grafana/tempo:${TEMPO_VERSION:-latest}
    command: [ "-config.file=/etc/tempo.yaml" ]
    container_name: tempo
    restart: unless-stopped
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "3200"  # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http

  # Exports Metrics to Prometheus
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    restart: unless-stopped
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --web.external-url=${URL_PREFIX_PROMETHEUS:-/prometheus}
      - --web.route-prefix=${URL_PREFIX_PROMETHEUS:-/prometheus}
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./prometheus/targets:/etc/prometheus/targets
      #- prometheus_data:/prometheus
    ports:
      - 9090:9090
    healthcheck:
      test:
        - "CMD"
        - "wget"
        - "--quiet"
        - "http://localhost:9090${URL_PREFIX_PROMETHEUS:-/prometheus}/-/healthy"
        - "--output-document"
        - "-"
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - cadvisor
      #- node-exporter

  # Exports Metrics to Grafana
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${CADVISOR_VERSION:-latest}
    restart: unless-stopped
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080

  # FIXME:
  # Error response from daemon: path / is mounted on / but it is not a shared or slave mount
  # Exports Metrics to Prometheus
  #node-exporter:
  #  image: prom/node-exporter:${NODE_EXPORTER_VERSION:-latest}
  #  restart: unless-stopped
  #  privileged: true
  #  container_name: node-exporter
  #  volumes:
  #    - /proc:/host/proc:ro
  #    - /sys:/host/sys:ro
  #    - /:/rootfs:ro
  #    - /:/host:ro,rslave
  #  command:
  #    - "--path.procfs=/host/proc"
  #    - "--path.sysfs=/host/sys"
  #    - "--path.rootfs=/rootfs"
  #    - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
  #  ports:
  #    - 9100
